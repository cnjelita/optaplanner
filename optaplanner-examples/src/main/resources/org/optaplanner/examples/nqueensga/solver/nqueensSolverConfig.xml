<?xml version="1.0" encoding="UTF-8"?>
<solver>
    <!--<environmentMode>FAST_ASSERT</environmentMode>-->
    <solutionClass>org.optaplanner.examples.nqueensga.domain.NQueens</solutionClass>
    <planningEntityClass>org.optaplanner.examples.nqueensga.domain.Queen</planningEntityClass>

    <scoreDirectorFactory>
        <scoreDefinitionType>SIMPLE</scoreDefinitionType>
        <simpleScoreCalculatorClass>org.optaplanner.examples.nqueensga.solver.score.NQueensSimpleScoreCalculator</simpleScoreCalculatorClass>
        <!--<incrementalScoreCalculatorClass>org.optaplanner.examples.nqueens.solver.score.NQueensBasicIncrementalScoreCalculator</incrementalScoreCalculatorClass>-->
        <!--<incrementalScoreCalculatorClass>org.optaplanner.examples.nqueens.solver.score.NQueensAdvancedIncrementalScoreCalculator</incrementalScoreCalculatorClass>-->
        <!--<scoreDrl>/org/optaplanner/examples/nqueens/solver/nQueensScoreRules.drl</scoreDrl>-->
    </scoreDirectorFactory>

    <termination>
        <scoreAttained>0</scoreAttained>
    </termination>
    <!--<constructionHeuristic>-->
        <!--<constructionHeuristicType>FIRST_FIT_DECREASING</constructionHeuristicType>-->
        <!--<constructionHeuristicPickEarlyType>FIRST_LAST_STEP_SCORE_EQUAL_OR_IMPROVING</constructionHeuristicPickEarlyType>-->
    <!--</constructionHeuristic>-->
    <geneticAlgorithm>
        <populationParameters>
            <populationSize>30</populationSize>
        </populationParameters>
        <uniformCrossoverOperator/>
        <replacementStrategy>
            <replacementStrategyType>KEEP_NEW</replacementStrategyType>
        </replacementStrategy>
    </geneticAlgorithm>
</solver>
